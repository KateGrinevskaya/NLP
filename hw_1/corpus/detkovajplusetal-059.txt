
1. Введение
     Идея представления корпусной выдачи в виде статистики сочетаемости ана-
лизируемого слова с синтаксически связанными лексическими единицами была
предложена и реализована Адамом Килгарифом в рамках проекта SketchEngine [9].
     Информация о сочетаемости слова представляется в виде скетчей — обоб-
щенных лексикографических портретов, где зависимые слова классифициру-
ются по грамматическим отношениям: для дочерних зависимых указывается,
являются ли они определением, субъектом, объектом или соответствуют дру-
гой синтаксической роли.
     Подобные скетчи не только позволяют продемонстрировать в сжатом виде
основную сочетаемость слова, но также являются удобным инструментом для
сравнения сочетаемости разных слов, что бывает полезно при сопоставлении
разных лексических единиц одного лексико-семантического поля.
     Получение скетчей может основываться на уже имеющейся [частичной]
синтаксической разметке корпусов или использовании так называемых скетч-
грамматик, имеющих вид контекстно-свободных правил, которые строят от-
дельные типы синтаксических связей на основе автоматической морфораз-
метки корпуса [8].


    Идея построения синтаксических скетчей оказалась очень продуктивной,
а многоязычные интернет-корпуса, собранные в рамках проекта SketchEngine,
стали востребованным инструментом корпусных лингвистических исследований.
    Надежность и польза полученных скетчей для исследователя ограничена
сегодня следующими факторами:

    • состав корпуса (зависимость от состава корпуса очевидна, но редко ана-
      лизируется [4]);
    • качество установленных связей (его влияние на получаемую статистику
      также на удивление остается без внимания);
    • невозможность строить скетчи с учетом лексической омонимии.

      Последний пункт особенно важен: результаты агрегации по всем значе-
ниям лексической единицы сложно интерпретировать, и эту проблему нельзя
решить на уровне синтаксиса.
      Чтобы снять лексическую неоднозначность, необходимо дополнить имею-
щийся инструментарий семантическим анализом. Это позволило бы не только
решить (насколько это возможно) проблему омонимии, но и учесть диатезное
варьирование при реализации семантических отношений.
      Целью данной работы является создание семантических скетчей. В них за-
висимые классифицируются уже не по грамматическим отношениям, а в тер-
минах семантических ролей, таких как Агент, Экспериенсер, Объект, Локатив
и т. п., и для каждого слова, помимо грамматических признаков, учитывается
также его семантическое значение.
      Кроме того, хотелось бы анализировать лексикографические портреты лек-
сем с учетом жанрово-тематического и социолингвистического варьирования [4].
      Для решения этой задачи нужны дифференциальные корпуса1 и доста-
точно надежные семантические анализаторы, основанные на разметке, кото-
рая устроила бы лингвистов и лексикографов.
      В качестве корпуса мы естественным образом выбрали ГИКРЯ, поскольку
других дифференциальных корпусов для РЯ пока нет. «Ближайший» корпус
со свойством дифференциальности [17] реализует пока только идею сегмент-
ной различимости данных для лингвистического анализа.
      Сама идея скетчей на основании семантических отношений достаточно оче-
видна, но ее реализации препятствует отсутствие сегодня систематической корпус-
ной семантической разметки. Создать такую разметку с помощью аналога скетч-
грамматик, оперирующих синтаксическими отношениями, вряд ли возможно.
      Естественным решением данной проблемы представляется прямое ис-
пользование семантических парсеров. Остановимся подробнее на возмож-
ностях их применения для построения семантических скетчей с указанными
характеристиками.


1
    При дифференциальном подходе [4] всякая корпусная статистика параметризуется
    метатекстовыми характеристиками: от года создания и социолингвистических ха-
    рактеристик автора до сегментов Интернета, что позволяет обнаруживать статисти-
    чески значимые различия (смещения) в корпусной выдаче.


2. Использование семантических парсеров
   при создании семантических скетчей
     В настоящее время исследования в области frame semantic parsing ведутся
весьма активно, достаточно упомянуть хотя бы популярную для такого ана-
лиза DL-платформу SLING [13], основанную на разметке OntoNotes.
     Возможность оценки SOTA в этой области (см. раздел 4) дает проведенная
на ACL2019 shared task по семантической разметке [11]. Участникам было пред-
ложено пять фреймворков для семантической разметки: DELPH-IN MRS Bi-Lex-
ical Dependencies [6], Prague Semantic Dependencies [7], Elementary Dependency
Structures [10], Universal Conceptual Cognitive Annotation [1] и Abstract Meaning
Representation [3]. Из перечисленных систем разметки только UCCA поддер-
живает атрибуты ребер, остальные же ограничиваются метками вида “argN”,
сравнивать которые нецелесообразно.
     Анализ результатов Shared Task on Cross-Framework Meaning Representation
Parsing показал, что существующие open-source решения не подходят для се-
мантического анализа русского языка по нескольким причинам.

       1.	
          Отсутствие большого разнообразного по составу качественно раз-
          меченного семантического корпуса. Это относится ко всем языкам,
          и к РЯ в частности. Например, на том же треке ACL’2019 для обучения ис-
          пользовались сравнительно небольшие датасеты, объем максимального
          из которых составляет 56 тысяч предложений. Некоторая семантиче-
          ская разметка без снятия лексической омонимии реализована в подкор-
          пусе НКРЯ [16], для построения скетчей она, разумеется, не подходит.

       2.	
          Отсутствие стандарта семантической разметки: на уже упоминав-
          шемся треке ACL использовались 5 альтернативных систем разметок,
          и очевидно, акцент был сделан на машинном обучении, а не на сравни-
          тельном анализе подходов.

       3.	Предложенные фреймворки не используют информацию о семантиче-
           ских ролях зависимых, либо используют её очень ограниченно [11].

    По указанным выше причинам мы решили использовать для разметки се-
мантическую модель и парсер Compreno [2], предоставленный авторам для ис-
следовательских целей по академической ограниченной лицензии2.
    Основные его характеристики представлены в [2], семантическая часть
модели описана в [12], некоторые примеры также представлены в приложении.
Отметим две составляющие модели Compreno, релевантные для целей настоя-
щего исследования:



2
     Данная лицензия позволяет размечать и выводить в открытый доступ корпуса огра-
     ниченного объема. Кроме того, ABBYY как участник проекта ГИКРЯ предоставляет
     разработчикам корпуса возможность использовать разметку для целей лингвисти-
     ческих исследований в отдельных подкорпусах, включая отдельные SQL-запросы
     и агрегацию их результатов.


 • во-первых, это организация лексики: все слова представлены в виде семан-
   тической иерархии тезаурусного типа, где каждому слову соответствует
   свой семантический класс (СК), определяющий значение слова и его место
   в иерархии. Разделение по семантическим классам позволяет рассматри-
   вать отдельно разные значения слова;
 • во-вторых, — организация семантических отношений между словами: се-
   мантические отношения представлены в виде глубинных позиций (ГП).
   Если валентности в традиционном понимании покрывают, в основном,
   только актантные зависимые, то ГП описывают все возможные зависимые,
   как актантные, как и сирконстантные, что позволяет выводить в скетчах
   полную сочетаемость слова.

    Мы использовали не полную семантико-синтаксическую разметку Com-
preno, а только подмножество разметки с указанием СК и ГП, актуальное для
построения семантических скетчей.
    Рассмотрим далее особенности выбранной разметки и корпус, на котором
строились семантические скетчи.



3. Особенности корпуса и разметки
    В настоящей работе для экспериментов был использован журнальный под-
корпус ГИКРЯ.
    Объем подкорпуса:
  • 74 тысячи документов,
  • 24,7 млн предложений,
  • 326 млн слов.

     Все тексты были размечены с помощью технологии ABBYY Compreno [15].
Результатом разметки является семантическая структура для каждого предло-
жения в виде дерева семантических отношений между семантическими клас-
сами входящих в него слов.
     Для целей данного исследования было решено ограничиться частичной
семантической разметкой, где маркируются только поддеревья глаголов: все
глаголы размечаются семантическими классами и глубинными позициями
для их непосредственных зависимых; все зависимые, для которых опреде-
лены ГП, маркируются также и по СК, что позволяет нам получать пары вида
"глагол:СК [ГП: зависимая:СК]", например:

    Окна выходят в сад.
    "выходить:TO_FRONT" [Object: окно "окно:WINDOW_OF_BUILDING"]
    "выходить:TO_FRONT" [в Locative_FinalPoint: сад "сад:сад:GARDEN"]

     На семантических отношениях этих поддеревьев и строятся скетчи в пер-
вой версии.
     Вершиной такого поддерева является семантический класс глагола (наи-
более вероятный по результатам анализа), его дочерние элементы связаны
с ним семантическими отношениями — ГП из некоторого набора Compreno


(примеры используемых для построения скетчей ГП и иллюстративный фраг-
мент иерархии семантических классов приведены в приложении).
    Из атрибутов ядра оставлены лексема, семантический класс, морфологи-
ческие граммемы категории GrammaticalType (часть речи) и синтаксические
граммемы категории SyntacticCase (падеж). На рис. 1 ниже представлен разбор
предложения с указанной информацией при лексемах и семантическими от-
ношениями между ними.




                Рис. 1. Разбор предложения с указанными
        семантическими отношениями, семантическими классами
           и грамматическими значениями ядер составляющих

     Таким образом, на данном этапе мы не размечали СК и ГП для прилага-
тельных, именных групп при существительных и прочих неглагольных зави-
симых, для синтаксически перемещенных групп, а также зависимые при эл-
липтированных глаголах (в предложениях типа Мы правы. не маркируются
ГП и СК при эллиптированном «быть») и сами эллиптированные зависимые
(например, в предложении Составители попросили каждого из поэтов сочи-
нить... подразумевается эллиптированное ядро «поэта» в составляющей «каж-
дого (поэта) из поэтов»).
     Большинство этих ограничений не является принципиальным, поскольку,
во-первых, используемый парсер данную информацию предоставляет, а, во-
вторых, степень влияния таких случаев на скетчевую выдачу предоставляется
несущественной (что, впрочем, планируется проверить на следующих этапах
исследования).
     Местоимения размечаются классами вида PRONOUN в тех случаях, когда
не удается установить по контексту связь с референтом, и классом референта —
когда такая связь устанавливается. В соответствии с этим возможны такие ва-
рианты разметки:

     #— А как зовут "звать:TO_CALL_AND_DESIGNATE" Object: ее
     "#pronoun_personal:#pronoun_personal:PRONOUN_BEING"?

— референт «ее» не найден;


    #— А как зовут "звать:TO_CALL_AND_DESIGNATE" Object: ее
    "болонка:PET_DOG"?

— связь с референтом «ее» установлена по контексту.

    В итоге, размеченный корпус содержит:

  • 55 тысяч различных семантических классов;
  • 91 тысяча различных лексических классов (под лексическим классом по-
    нимается потомок семантического класса в конкретном языке);
  • 305 различных глубинных позиций;
  • 95 млн экземпляров семантических отношений — то есть, размеченных
    вхождений данных ГП в корпусе.
     Разметка получена с помощью API, предоставленного ABBYY для иссле-
дований по ограниченной лицензии, и выгружена в локальную базу данных
с примерами для сбора статистик. Также написан экспортер разметки в формат
xml, необходимый для публикации корпуса-прототипа в open-source, ссылка
на который представлена ниже.



4. Оценка качества семантической разметки
     Для оценки качества разметки случайным образом было отобрано 200
предложений из журнального зала ГИКРЯ. Автоматическая разметка была
проверена и исправлена вручную, и уже с полученной таким образом эталон-
ной разметкой проводилось сравнение.
     В качестве метрики была выбрана официальная метрика для ACL Shared Task
2019 —Meaning Representation Parsing [11]. Эта метрика (далее MRP F1) представ-
ляет собой невзвешенное среднее между F1-score для различных объектов раз-
метки: узлы дерева разбора, метки узлов (семантические классы), атрибуты узлов
(граммемы), привязка к тексту, связи, атрибуты связей (глубинные позиции).
     Привязка к тексту сравнивается максимально мягко: не учитываются
ошибки на пробельных символах, пунктуации, скобках и кавычках, не учи-
тываются ошибки разбиения аннотации на несколько подряд идущих. MRP
F1 разработана как универсальная метрика для сравнения деревьев разбора
различных форматов представления семантической структуры и хорошо
адаптируется к отсутствию любого из объектов разметки. Так, мы не учиты-
вали качество определения граммем ядер составляющих, так как они не вли-
яют напрямую на качество скетчевой выдачи. Кроме того, ввиду ограничений
разметки, взятой для эксперимента, мы имеем дело не с полными деревьями
разбора, а с их не обязательно связными подграфами. Выбранная метрика
не противоречит этой модификации, но нужно учитывать, что сравнение с ре-
зультатами MRP Shared Task 2019 не вполне корректно по нескольким причи-
нам: мы оцениваем разметку на другом языке, другом корпусе и с упрощенной
структурой.
     В результате была получена следующая оценка для корпуса: MRP
F1 = 96,78, что является достаточно высоким значением для автоматического
парсера. Для сравнения, максимальное значение MRP F1, которого удалось
достичь на ACL 2019 Shared Task, составляет 0,84 (оценка для 100 случайных
предложений из The Little Prince) [11].
    Основное количество ошибок было связано с выбором СК для нужного зна-
чения глагола (например, «выйти» в буквальном значении движения в «ста-
тья вышла в свет» вместо «выйти» в значении «появиться»), с выбором СК для
зависимой (например, "нос:NOSE_AS_FRONT_PART" в «из носу кровь» вместо
ожидаемого «нос:NOSE»), а также с выбором ГП — как правило, в случае их воз-
можной омонимии (например, Locative для «[в книге] написано» вместо предпо-
лагаемого MetaphoricLocative (разбор с неметафорическим локативом был бы
уместен в предложении типа «[в книге] лежала закладка»)).
    Более подробно с корпусом, использованным для оценки качества раз-
метки, можно ознакомиться по ссылке: SemanticSketchCorpora.



5. Семантические скетчи
    Описанная семантическая разметка позволяет нам строить семантиче-
ские скетчи с обозначенными выше характеристиками, а именно — с учетом
разделения слова на разные значения, с группировкой зависимых по семанти-
ческим отношениям и возможностью единообразно представлять одинаковые
семантические роли независимо от их разного синтаксического выражения
при разных предикатах.
    Рассмотрим теперь технические средства построения скетчей данного
формата.


5.1. Обозначения
    Здесь и далее используются обозначения в заголовках таблиц с примерами:
  • Lexeme — лексема ядра составляющей
  • SemanticClass — семантический класс составляющей
  • SlotName — семантическая роль дочерней составляющей
  • ChildText — текст заполнителя
  • Count — поддержка коллокации в корпусе
  • F — частота встречаемости коллокации, умноженная на 106 для удобства
    отображения
  • MI — метрика ассоциации Mutual Information
  • Dice — метрика ассоциации logDice


5.2. Метрики
    Ранжирование только по частоте встречаемости сочетания в корпусе
не представляет большого интереса, так как не несёт никакой информации
о том, насколько то или иное словосочетание характерно для исследуемого
слова или семантического класса. Поэтому мы предусмотрели возможность
ранжировать скетчевую выдачу по нескольким метрикам:
    Частота встречаемости:

    Mutual Information:		

    logDice:			

     Так как метрики MI и logDice чувствительны к случайным сочетаниям,
было решено использовать их вместе с ограничением на частоту встречаемо-
сти в корпусе. Примеры, для которых она ниже некоторого устанавливаемого
пользователем порога, не попадают в скетчевую выдачу. Преимущество ме-
трики logDice хорошо видно на следующих примерах:

(1) Топ-5 коллокаций глагола "сообщать:TO_INFORM" по частоте
    встречаемости:




(2) Топ-5 коллокаций глагола "сообщать:TO_INFORM" по logDice:




5.3. Механизм построения скетчей
    Все данные, необходимые для построения скетчей, выгружаются из кор-
пуса в базу данных SQLServer. Там же хранятся списки ГП и СК. Для ускорения
вычисления метрик MI и logDice в базе сохранены предпосчитанные частоты
встречаемости для лексических и семантических классов ядер составляющих.
Непосредственно вычисления оформлены в виде хранимых процедур T-SQL.
Для получения данных из базы и визуализации скетчей использованы библио-
теки Python: pyodbc, pandas, seaborn.

5.4. Семантические классы
     Основным преимуществом нового инструмента является взаимодействие
с семантической разметкой предложений. Это позволяет снять омонимию в боль-
шинстве контекстов: на этапе разметки для каждого слова при помощи парсера
определен наиболее вероятный класс, к которому слово может принадлежать
в данном контексте. Как следствие, мы можем строить скетчи для различных зна-
чений слова. Можно продемонстрировать разницу на примере глагола «выходить»:

(3) Примеры для различных семантических классов глагола «выходить»:

      Класс                                  Пример употребления
      TO_FRONT                              Окна выходят в сад.
      TO_WALK                               Мальчик вышел из комнаты.
      TO_TAKE_PLACE                         Из этой затеи ничего не вышло.
      TO_TREAT_AND_CURE                     Выходить больного щенка.

    Приведем семантические скетчи для некоторых из данных значений (для
удобства сравнения представим скетчи в виде таблиц без частотных характе-
ристик, но с разделением по ГП, аналогично тому, как в Sketchengine представ-
лено разделение по синтаксическому выражению). Здесь и далее примеры при-
ведены в порядке убывания метрики logDice:

(4) Семантический скетч для глагола "выходить:TO_TAKE_PLACE":




(5) Семантический скетч для глагола "выходить: TO_FRONT":



    Для сравнения приведем также скетч для «выйти», получаемый на sketch-
engine.eu:




     Как видно, выдача содержит разные значения данного глагола: «выйти
на крыльцо, на балкон» соответствует СК TO_WALK выше, — «выйти в свет,
в прокат, вышел альбом» — значению «появиться», «ошибочка вышла» — «про-
изойти» (TO_TAKE_PLACE) и так далее.
     Конечно, в ряде случаев омонимия разрешается неправильно и в нашей
модели. Для примера приведем скетч "выйти:TO_WALK":




     Как видно, примеры, попавшие в колонку с ГП Agent_Metaphoric, не на дан-
ное значение. Данная ошибка — результат неправильного семантического ана-
лиза, на который, в данном случае, влияет как модель, так и статистика. Это по-
зволяет надеяться, что при дальнейшем использовании и обучении на текстах
большего объема число подобных ошибок будет уменьшаться.


5.5. Глубинные позиции
    Семантическая разметка позволяет оперировать не поверхностными, син-
таксическими позициями, а глубинными, семантическими. Это, с одной сто-
роны, позволяет различать разную семантику в отношениях, имеющих одина-
ковое синтаксическое выражение, как в примерах (6) ниже:

(6) Примеры, в которых зависимые слова имеют одну поверхностную
    позицию Object_Dative, но разные глубинные:

      Глубинная позиция                      Пример
      Addressee                             Рассказать сказку [детям].
      Experiencer                           Позволить [гостю] войти.
      Possessor                             Дать [другу] книгу.

    C другой стороны, дает возможность сопоставить с ГП релевантные се-
мантические отношения даже в случае их разного синтаксического выраже-
ния. Сравним, к примеру, семантические скетчи двух лексических классов
из СК TO_INFORM — «сообщать» (7) и «извещать» (8):

(7) Семантический скетч для глагола "сообщать:TO_INFORM":




(8) Семантический скетч для глагола "извещать:TO_INFORM":




    Как видно, ГП Addressee имеет разное синтаксическое выражение при дан-
ных глаголах и соответствует прямому объекту при «извещать» и дативу — при
«сообщать». Однако это не мешает продемонстрировать общность семантиче-
ской модели данных глаголов в отношении валентности адресата.



5.6. Семантические скетчи для семантических классов
     Выше мы рассматривали примеры скетчей для отдельных слов. Тем не ме-
нее, интересным может быть также создание скетчей для целых семантиче-
ских классов, что позволило бы сравнивать разные лексемы одного семантиче-
ского поля (или, в терминах нашего формализма, разные лексические классы
одного СК).
     В качестве примера приведем фрагмент скетча для класса TO_COM-
MIT — лексической функции, где многие глаголы имеют весьма ограниченную
сочетаемость:




    Наиболее показательна сочетаемость с объектными позициями, где про-
является лексикализованность сочетаемости рассматриваемых глаголов (при-
нять участие vs задать вопрос vs сыграть роль и под.).


5.7. Другие возможности
   Помимо перечисленного, в предлагаемом инструменте реализованы сле-
дующие возможности:

 • ограничение части речи и падежа ядра зависимой составляющей;
 • ограничение части речи и падежа ядра родительской составляющей;
 • ограничение на количество упоминаний сочетания в корпусе — при жела-
   нии можно включать в скетчи только зависимые, встретившиеся больше
   n раз.

    Кроме того, при создании семантических скетчей в качестве зависимых
модель позволяет выводить как фрагменты размечаемых предложений (либо
равные составляющим, либо ядра составляющих с необходимыми граммати-
ческими характеристиками — в релевантных предложно-падежных формах,
например), так и ядра семантических классов, лексических классов или лексем.

6. Анализ результатов
     Новизной настоящего исследования является эксперимент по построению
семантических скетчей на значительном корпусном материале.
     Семантические скетчи позволяют получать сравнительные портреты слов
из одного семантического поля независимо от разницы в их синтаксических
моделях, а также получать данные о сочетаемости целых семантических клас-
сов и учитывать конкретные значения рассматриваемых слов.
     Реализация на основе разметки Compreno показала вполне приемлемые
результаты, хотя некоторой проблемой является большое количество типов
глубинных позиций — более 300. Эту проблему еще предстоит решить при
включении механизма семантических скетчей в функционал ГИКРЯ (мы на-
деемся на фидбэк от пользователей корпуса).


7.    Заключение и планы на будущее
     В настоящий момент проводится обучение SLING-подобных технологий
на корпусе RuSemSketches. Стоит задача попробовать применить обученную
нейросеть для семантической разметки всего корпуса ГИКРЯ (при этом скет-
чевая разметка все же проще, чем полная семантическая разметка, что дает
надежду получить приемлемые для пользователей результаты). Мы рассчиты-
ваем, что на основе RuSemSketches удастся провести shared task по семантиче-
ской разметке на следующем Диалоге.
     В ближайшее время планируется включить семантические скетчи на ос-
нове разметки Compreno в функциональность новой версии ГИКРЯ. Существен-
ной особенностью скетчей в ГИКРЯ является их дифференциальность: возмож-
ность сравнения результатов с учетом всех доступных в ГИКРЯ метатекстовых
признаков. Это позволит в ближайшей перспективе проводить исследования
по дифференциальной лексической семантике.


8. Благодарности
     Данная работа выполнена совместно исследовательской лабораторией AB-
BYY Lab МФТИ (проект ГИКРЯ) и отделом Advanced Research Development компа-
нии ABBYY. Мы благодарим всех коллег, и в особенности Константина Дружкина
и Евгения Инденбома за полезную критику и помощь в проведении исследования.
